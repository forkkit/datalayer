apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "hbase.name" . }}-hbase-rs
  labels:
    app: {{ template "hadoop.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: hbase-rs
spec:
  serviceName: {{ template "hbase.name" . }}-hbase-rs
  replicas: {{ .Values.hbase.regionServer.replicas }}
  template:
    metadata:
      labels:
        app: {{ template "hadoop.name" . }}
        release: {{ .Release.Name }}
        component: hbase-rs
    spec:
      affinity:
      requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchLabels:
                app:  {{ template "hadoop.name" . }}
                release: {{ .Release.Name | quote }}
                component: hdfs-nn
      terminationGracePeriodSeconds: 0
      containers:
      - name: hbase-rs
        image: {{ .Values.hbaseImage }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - "/bin/bash"
        - "/etc/hbase/bootstrap.sh"
        resources:
{{ toYaml .Values.hbase.regionServer.resources | indent 10 }}
        readinessProbe:
          httpGet:
            path: /
            port: 16030
          initialDelaySeconds: 5
          timeoutSeconds: 2
        livenessProbe:
          httpGet:
            path: /
            port: 16030
          initialDelaySeconds: 10
          timeoutSeconds: 2
        volumeMounts:
        - name: hadoop-config
          mountPath: /etc/hadoop
        - name: hbase-config
          mountPath: /etc/hbase
      volumes:
      - name: hadoop-config
        configMap:
          name: hadoop-config
      - name: hbase-config
        configMap:
          name: hbase-config